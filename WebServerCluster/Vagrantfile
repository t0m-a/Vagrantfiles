# -*- mode: ruby -*-
# vi: set ft=ruby :

# Ansible Master Server VM for the Cluster
Vagrant.configure("2") do |config|
    config.vm.box = "bento/ubuntu-18.04"
    config.vm.box_version = "201910.20.0"
    config.vm.box_check_update = true
    config.vm.boot_timeout = 3600
    config.vm.define "ansible-master-cluster"
    config.vm.hostname="ansible-master-cluster"
    config.ssh.username = 'vagrant'
    config.ssh.password = 'vagrant'
    config.ssh.insert_key = false
    config.ssh.forward_agent = true
    config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', './data_private/vagrant.pem']
    config.vm.provision "file", source: "./data_private/insecure_private_key.pub", destination: "/home/vagrant/.ssh/authorized_keys"
    config.vm.provision "file", source: "./data_private/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
    config.vm.provision "file", source: "./sshd_config", destination: "/home/vagrant/sshd_config"
    config.vm.provision "shell", inline: <<-SHELL
    sudo cp /home/vagrant/sshd_config /etc/ssh/ && chmod 761 /etc/ssh/sshd_config
    sudo service sshd restart
    SHELL
    config.vm.provision "shell", inline: <<-SHELL
    cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
    # Network customization to run on public and bridge networks
    # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    # Create a public network, which generally matched to bridged network.
    # config.vm.network "public_network"
    config.vm.network "public_network", ip: "192.168.1.254"
    config.vm.network "forwarded_port", guest: 22, host: 2222

    # Folders shares
    config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=775,fmode=764"]
    config.vm.synced_folder "./data_private", "/home/vagrant/data_private", :mount_options => ["dmode=775,fmode=764"]

    # User script post-boot
    config.vm.provision :shell, path: "bootstrap-ansible.sh"

    # Provider configuration
    config.vm.provider "virtualbox" do |vb|
       vb.name = "ansible-master-cluster"
       vb.memory = "256"
       vb.cpus = 6
       end
    end

# Load Balancer VM for the Cluster
Vagrant.configure("2") do |config|
    config.vm.box = "bento/ubuntu-18.04"
    config.vm.box_version = "201910.20.0"
    config.vm.box_check_update = true
    config.vm.boot_timeout = 3600
    config.vm.define "load-balancer-cluster"
    config.vm.hostname="load-balancer-cluster"
    config.ssh.username = 'vagrant'
    config.ssh.password = 'vagrant'
    config.ssh.insert_key = false
    config.ssh.forward_agent = true
    config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', './data_private/vagrant.pem']
    config.vm.provision "file", source: "./data_private/insecure_private_key.pub", destination: "/home/vagrant/.ssh/authorized_keys"
    config.vm.provision "file", source: "./data_private/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
    config.vm.provision "file", source: "./sshd_config", destination: "/home/vagrant/sshd_config"
    config.vm.provision "shell", inline: <<-SHELL
    sudo cp /home/vagrant/sshd_config /etc/ssh/ && chmod 761 /etc/ssh/sshd_config
    sudo service sshd restart
    SHELL
    config.vm.provision "shell", inline: <<-SHELL
    cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
    config.vm.network "public_network", ip: "192.168.1.253"
    config.vm.network "forwarded_port", guest: 22, host: 2223
    config.vm.network "forwarded_port", guest: 80, host: 80
    config.vm.network "forwarded_port", guest: 443, host: 443
    config.vm.provision "file", source: "./data_private/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
    config.vm.provision "file", source: "./data_private/aws.pub", destination: "/home/vagrant/.ssh/aws.pub"
    config.vm.provision "shell", inline: <<-SHELL
    cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    cat /home/vagrant/.ssh/aws.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
    config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=775,fmode=764"]
    config.vm.synced_folder "./data_private", "/home/vagrant/data_private", :mount_options => ["dmode=775,fmode=764"]
    # Installing and configuring middleware will be handled by Ansible
    # config.vm.provision :shell, path: "bootstrap-load-balancer.sh"
    config.vm.provider "virtualbox" do |vb|
        vb.name = "load-balancer-cluster"
        vb.memory = "256"
        vb.cpus = 6
        end
     end

# Nginx Servers VMs for the Cluster

# MySQL Servers VMs for the Cluster Master (and Slave)